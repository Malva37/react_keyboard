{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","onKeyDown","event","setState","key","document","addEventListener","this","window","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAaEC,UAAY,SAACC,GACX,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,aAN5C,kCASE,WACEO,OAAOC,oBAAoB,QAASF,KAAKN,aAV7C,oBAiBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,mBAAGU,UAAU,eAAb,SACGV,EAAU,mCACqBA,EADrB,KAEP,gCAxBZ,GAAyBW,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.94466744.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey:string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.onKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keyup', this.onKeyDown);\n  }\n\n  onKeyDown = (event:KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <p className=\"App__message\">\n        {pressedKey\n          ? `The last pressed key is [${pressedKey}]`\n          : 'Nothing was pressed yet'}\n      </p>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}